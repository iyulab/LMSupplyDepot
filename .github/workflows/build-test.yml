name: Build and Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - '.github/workflows/build-test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'

env:
  DOTNET_VERSION: '9.0.x'
  CI: true
  GITHUB_ACTIONS: true

jobs:
  build-test:
    name: Build and Test
    runs-on: windows-2022

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Packages.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Display build environment
      run: |
        echo "Build Environment Information:"
        echo "- Repository: ${{ github.repository }}"
        echo "- Branch: ${{ github.ref_name }}"
        echo "- Commit: ${{ github.sha }}"
        echo "- .NET Version: ${{ env.DOTNET_VERSION }}"
        echo "- CI Environment: ${{ env.CI }}"
        echo "- Skip LLama Backends: true (CI build)"
        echo ""
        echo "Directory structure:"
        Get-ChildItem -Path "src" -Directory | ForEach-Object { echo "  - $($_.Name)" }
      shell: powershell

    - name: Restore dependencies
      run: |
        echo "‚ö†Ô∏è Building without LLamaSharp backend packages for CI compatibility"
        echo "Temporarily disabling NU1507 warnings for CI build due to multiple package sources"
        dotnet restore src/LMSupplyDepots.sln --verbosity normal --disable-parallel -p:WarningsNotAsErrors=NU1507
      shell: powershell

    - name: Build solution
      run: |
        echo "Building all projects..."
        dotnet build src/LMSupplyDepots.sln --configuration Release --no-restore --verbosity normal -p:WarningsNotAsErrors=NU1507
      shell: powershell

    - name: Run tests
      run: |
        echo "Running CI tests (excluding LocalIntegration tests)..."
        dotnet test src/LMSupplyDepots.sln --configuration Release --no-build --verbosity normal --logger trx --results-directory "TestResults/" --filter "Category!=LocalIntegration" -p:WarningsNotAsErrors=NU1507
      shell: powershell

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/*.trx
        retention-days: 7

    - name: Test summary
      if: always()
      run: |
        echo "CI test execution completed (LocalIntegration tests excluded)."
        echo "Test result files:"
        if (Test-Path "TestResults") {
          Get-ChildItem -Path "TestResults" -Filter "*.trx" | ForEach-Object {
            echo "  - $($_.Name)"
          }
        } else {
          echo "  No test result files found"
        }
        echo ""
        echo "‚ÑπÔ∏è Note: Tests requiring local models/API keys are excluded from CI"
        echo "   Run locally with: dotnet test --filter 'Category=LocalIntegration'"
      shell: powershell

    - name: Build validation
      run: |
        echo "Build validation completed successfully!"
        echo ""
        echo "Projects built:"
        echo "‚úÖ Core Libraries:"
        echo "  - LMSupplyDepots (domain models)"
        echo "  - LMSupplyDepots.ModelHub (model management)"
        echo "  - LMSupplyDepots.Inference (inference engines)"
        echo ""
        echo "‚úÖ External Wrappers:"
        echo "  - LMSupplyDepots.External.HuggingFace"
        echo "  - LMSupplyDepots.External.LLamaEngine"
        echo "  - LMSupplyDepots.External.OpenAI"
        echo ""
        echo "‚úÖ SDK & Applications:"
        echo "  - LMSupplyDepots.SDK"
        echo "  - LMSupplyDepots.Host"
        echo "  - LMSupplyDepots.HostApp"
        echo "  - LMSupplyDepots.CLI"
        echo ""
        echo "‚úÖ Test Projects:"
        echo "  - LMSupplyDepots.External.HuggingFace.Tests"
        echo "  - LMSupplyDepots.External.LLamaEngine.Tests"
        echo "  - LMSupplyDepots.Host.Tests"
        echo ""
        echo "Build artifacts are ready for deployment via hostapp.yml workflow."
        echo ""
        echo "üìù Local Testing Information:"
        echo "  - CI tests exclude LocalIntegration category (external dependencies)"
        echo "  - To run local tests with models/APIs:"
        echo "    dotnet test --filter 'Category=LocalIntegration'"
        echo "  - To run all tests (CI + Local):"
        echo "    dotnet test"
      shell: powershell